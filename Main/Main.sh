#!/bin/bash

# Define colors (Blue and Light White gradient simulation)
BLUE="\e[38;5;33m"
LIGHT_WHITE="\e[38;5;255m"
RESET="\e[0m"

# Clear screen
clear

# Display the ASCII art
echo -e "${BLUE}"
cat << "EOF"
#############################################################################################
#                                                                                           #
# /$$$$$$$   /$$$$$$  /$$   /$$    /$$$$$$$$                                      /$$       #
#| $$__  $$ /$$__  $$| $$  /$$/   |__  $$__/                                     | $$       #
#| $$  \ $$|__/  \ $$| $$ /$$/       | $$ /$$   /$$ /$$$$$$$  /$$$$$$$   /$$$$$$ | $$       #
#| $$$$$$$/  /$$$$$$/| $$$$$/ /$$$$$$| $$| $$  | $$| $$__  $$| $$__  $$ /$$__  $$| $$       #
#| $$__  $$ /$$____/ | $$  $$|______/| $$| $$  | $$| $$  \ $$| $$  \ $$| $$$$$$$$| $$       #
#| $$  \ $$| $$      | $$\  $$       | $$| $$  | $$| $$  | $$| $$  | $$| $$_____/| $$       #
#| $$  | $$| $$$$$$$$| $$ \  $$      | $$|  $$$$$$/| $$  | $$| $$  | $$|  $$$$$$$| $$       #
#|__/  |__/|________/|__/  \__/      |__/ \______/ |__/  |__/|__/  |__/ \_______/|__/       #
#                                                                                           #
#                                                                                           #
#                                                                                           #
# /$$                       /$$$$$$$   /$$$$$$  /$$   /$$           /$$                     #
#| $$                      | $$__  $$ /$$__  $$| $$  /$$/          | $$                     #
#| $$$$$$$  /$$   /$$      | $$  \ $$|__/  \ $$| $$ /$$/       /$$$$$$$  /$$$$$$  /$$    /$$#
#| $$__  $$| $$  | $$      | $$$$$$$/  /$$$$$$/| $$$$$/       /$$__  $$ /$$__  $$|  $$  /$$/#
#| $$  \ $$| $$  | $$      | $$__  $$ /$$____/ | $$  $$      | $$  | $$| $$$$$$$$ \  $$/$$/ #
#| $$  | $$| $$  | $$      | $$  \ $$| $$      | $$\  $$     | $$  | $$| $$_____/  \  $$$/  #
#| $$$$$$$/|  $$$$$$$      | $$  | $$| $$$$$$$$| $$ \  $$ /$$|  $$$$$$$|  $$$$$$$   \  $/   #
#|_______/  \____  $$      |__/  |__/|________/|__/  \__/|__/ \_______/ \_______/    \_/    #
#           /$$  | $$                                                                       #
#          |  $$$$$$/                                                                       #
#           \______/                                                                        #
#                                                                                           #
#############################################################################################
EOF
echo -e "${RESET}"

# Menu
echo -e "${LIGHT_WHITE}"
echo "═════════════════════════════════════════════════════════════"
echo "             🌐 R2K Tunnel Manager by @R2Ksanu"
echo "═════════════════════════════════════════════════════════════"
echo -e "${BLUE}1)${LIGHT_WHITE} Install Ngrok Tunnel"
echo -e "${BLUE}2)${LIGHT_WHITE} Install Loophole Tunnel"
echo -e "${BLUE}3)${LIGHT_WHITE} Exit"
echo -e "${LIGHT_WHITE}═════════════════════════════════════════════════════════════"
read -p "Choose an option (1-3): " opt
echo -e "${RESET}"

case $opt in
  1)
    echo -e "${BLUE}Installing Ngrok...${RESET}"
    bash <(curl -sSL https://raw.githubusercontent.com/R2Ksanu/R2K-IP-TUNNEL-MANAGER/main/Tunnels/r2k-ip.sh)
    ;;
  2)
    echo -e "${BLUE}Installing Loophole...${RESET}"
    bash <(curl -sSL https://raw.githubusercontent.com/R2Ksanu/R2K-IP-TUNNEL-MANAGER/main/Tunnels/r2k-lxp.sh)
    ;;
  3)
    echo -e "${BLUE}Goodbye!${RESET}"
    exit 0
    ;;
  *)
    echo -e "${BLUE}Invalid option.${RESET}"
    ;;
esac
